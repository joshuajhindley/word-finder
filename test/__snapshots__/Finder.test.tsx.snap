// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`tests the FinderUI component matches the snapshot 1`] = `
<Finder
  actions={
    Object {
      "findResults": [MockFunction],
      "invertColorMode": [MockFunction],
      "resetResults": [MockFunction],
      "toggleHelp": [MockFunction],
    }
  }
  darkMode={true}
  isFresh={true}
  results={Array []}
>
  <div
    className="app dark"
  >
    <div
      className="header"
    >
      <a
        href="/"
        tabIndex={-1}
      >
        <button
          tabIndex={-1}
        >
          &lt; Home
        </button>
      </a>
      <div
        className="help-message dark"
        onClick={[Function]}
      >
        <BsFillQuestionSquareFill>
          <IconBase
            attr={
              Object {
                "fill": "currentColor",
                "viewBox": "0 0 16 16",
              }
            }
          >
            <svg
              fill="currentColor"
              height="1em"
              stroke="currentColor"
              strokeWidth="0"
              style={
                Object {
                  "color": undefined,
                }
              }
              viewBox="0 0 16 16"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2zm3.496 6.033a.237.237 0 0 1-.24-.247C5.35 4.091 6.737 3.5 8.005 3.5c1.396 0 2.672.73 2.672 2.24 0 1.08-.635 1.594-1.244 2.057-.737.559-1.01.768-1.01 1.486v.105a.25.25 0 0 1-.25.25h-.81a.25.25 0 0 1-.25-.246l-.004-.217c-.038-.927.495-1.498 1.168-1.987.59-.444.965-.736.965-1.371 0-.825-.628-1.168-1.314-1.168-.803 0-1.253.478-1.342 1.134-.018.137-.128.25-.266.25h-.825zm2.325 6.443c-.584 0-1.009-.394-1.009-.927 0-.552.425-.94 1.01-.94.609 0 1.028.388 1.028.94 0 .533-.42.927-1.029.927z"
                key="0"
              />
            </svg>
          </IconBase>
        </BsFillQuestionSquareFill>
      </div>
      <div
        className="color dark"
        onClick={[Function]}
        tabIndex={1}
      />
    </div>
    <div
      className="body"
    >
      <div
        className="search"
      >
        <ReactFinalForm
          onSubmit={[Function]}
        >
          <form
            autoComplete="off"
            onSubmit={[Function]}
          >
            <h2>
              Word Finder for Wordle
            </h2>
            <h4>
              Letters in the correct position
            </h4>
            <ForwardRef(Field)
              component="input"
              key="0"
              maxLength="1"
              name="letter1"
              onFocus={[Function]}
              onInput={[Function]}
              onKeyUp={[Function]}
              parse={[Function]}
            >
              <input
                maxLength="1"
                name="letter1"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onInput={[Function]}
                onKeyUp={[Function]}
                value=""
              />
            </ForwardRef(Field)>
            <ForwardRef(Field)
              component="input"
              key="1"
              maxLength="1"
              name="letter2"
              onFocus={[Function]}
              onInput={[Function]}
              onKeyUp={[Function]}
              parse={[Function]}
            >
              <input
                maxLength="1"
                name="letter2"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onInput={[Function]}
                onKeyUp={[Function]}
                value=""
              />
            </ForwardRef(Field)>
            <ForwardRef(Field)
              component="input"
              key="2"
              maxLength="1"
              name="letter3"
              onFocus={[Function]}
              onInput={[Function]}
              onKeyUp={[Function]}
              parse={[Function]}
            >
              <input
                maxLength="1"
                name="letter3"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onInput={[Function]}
                onKeyUp={[Function]}
                value=""
              />
            </ForwardRef(Field)>
            <ForwardRef(Field)
              component="input"
              key="3"
              maxLength="1"
              name="letter4"
              onFocus={[Function]}
              onInput={[Function]}
              onKeyUp={[Function]}
              parse={[Function]}
            >
              <input
                maxLength="1"
                name="letter4"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onInput={[Function]}
                onKeyUp={[Function]}
                value=""
              />
            </ForwardRef(Field)>
            <ForwardRef(Field)
              component="input"
              key="4"
              maxLength="1"
              name="letter5"
              onFocus={[Function]}
              onInput={[Function]}
              onKeyUp={[Function]}
              parse={[Function]}
            >
              <input
                maxLength="1"
                name="letter5"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onInput={[Function]}
                onKeyUp={[Function]}
                value=""
              />
            </ForwardRef(Field)>
            <h4>
              Letters in any position
            </h4>
            <ForwardRef(Field)
              component="input"
              key="0"
              maxLength="1"
              name="anyPosLetter1"
              onFocus={[Function]}
              onInput={[Function]}
              onKeyUp={[Function]}
              parse={[Function]}
            >
              <input
                maxLength="1"
                name="anyPosLetter1"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onInput={[Function]}
                onKeyUp={[Function]}
                value=""
              />
            </ForwardRef(Field)>
            <ForwardRef(Field)
              component="input"
              key="1"
              maxLength="1"
              name="anyPosLetter2"
              onFocus={[Function]}
              onInput={[Function]}
              onKeyUp={[Function]}
              parse={[Function]}
            >
              <input
                maxLength="1"
                name="anyPosLetter2"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onInput={[Function]}
                onKeyUp={[Function]}
                value=""
              />
            </ForwardRef(Field)>
            <ForwardRef(Field)
              component="input"
              key="2"
              maxLength="1"
              name="anyPosLetter3"
              onFocus={[Function]}
              onInput={[Function]}
              onKeyUp={[Function]}
              parse={[Function]}
            >
              <input
                maxLength="1"
                name="anyPosLetter3"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onInput={[Function]}
                onKeyUp={[Function]}
                value=""
              />
            </ForwardRef(Field)>
            <ForwardRef(Field)
              component="input"
              key="3"
              maxLength="1"
              name="anyPosLetter4"
              onFocus={[Function]}
              onInput={[Function]}
              onKeyUp={[Function]}
              parse={[Function]}
            >
              <input
                maxLength="1"
                name="anyPosLetter4"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onInput={[Function]}
                onKeyUp={[Function]}
                value=""
              />
            </ForwardRef(Field)>
            <ForwardRef(Field)
              component="input"
              key="4"
              maxLength="1"
              name="anyPosLetter5"
              onFocus={[Function]}
              onInput={[Function]}
              onKeyUp={[Function]}
              parse={[Function]}
            >
              <input
                maxLength="1"
                name="anyPosLetter5"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onInput={[Function]}
                onKeyUp={[Function]}
                value=""
              />
            </ForwardRef(Field)>
            <h4>
              Letters not in answer
            </h4>
            <ForwardRef(Field)
              component="input"
              key="0"
              maxLength="1"
              name="notLetter1"
              onFocus={[Function]}
              onInput={[Function]}
              onKeyUp={[Function]}
              parse={[Function]}
            >
              <input
                maxLength="1"
                name="notLetter1"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onInput={[Function]}
                onKeyUp={[Function]}
                value=""
              />
            </ForwardRef(Field)>
            <br />
            <button
              className="search-button"
              type="submit"
            >
              Search
            </button>
            <br />
            <button
              className="reset-button"
              onClick={[Function]}
              type="button"
            >
              Reset
            </button>
          </form>
        </ReactFinalForm>
      </div>
      <div
        className="results"
      />
    </div>
  </div>
</Finder>
`;
